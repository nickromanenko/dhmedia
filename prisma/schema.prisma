// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model Bot {
  id              String      @id @default(uuid())
  name            String
  description     String?
  model           String
  api_key         String
  prompt          String
  kb_id           String?
  settings        Json?
  widget_settings Json?
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
  messages        Message[]
  embeddings      Embedding[]

  @@map("bots")
}

model Message {
  id         String   @id @default(uuid())
  role       String   // system, user, or assistant
  content    String
  thread_id  String   // Required field for conversation threading
  bot_id     String
  bot        Bot      @relation(fields: [bot_id], references: [id])
  created_at DateTime @default(now())

  @@index([thread_id])
  @@map("messages")
}

/// Represents a text embedding using OpenAI's text-embedding-3-small model
model Embedding {
  id         String                    @id @default(uuid())
  content    String                    // The original text content
  embedding  Unsupported("vector(1536)")  // OpenAI text-embedding-3-small dimensions
  metadata   Json?                     // Optional metadata about the embedding
  bot_id     String                    // Reference to the bot this embedding belongs to
  bot        Bot                       @relation(fields: [bot_id], references: [id])
  created_at DateTime                  @default(now())

  @@index([bot_id])
  @@map("embeddings")
}
